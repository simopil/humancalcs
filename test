oggetto numero:
------------------------
int pos_virg;
char raw_val[];
------------------------
-----------------------
somma(char cifra1, char cifra2)
rip_somma(char cifra1, char cifra2)
------------------------


addizione tra 2 numeri 


addizione(numero num1, numero num2, numero destinazione)
{
    -creare un oggetto nuovo di tipo numero: appoggionum;
    -creare un oggetto nuovo di tipo numero: appoggionum2;
    
    -confronto num1.pos_virg vs num2.pos_virg;
        capisco chi è più grande(ha più cifre prima della virgola)
        
    -prendo il numero più piccolo
        1)riempio appoggionum.raw_val[] di tanti zeri quanta la differenza tra una pos_virg e    l'altra (e aggiungo 0 ad entrambi davanti)
        
            25.6 | 584.65-> 025.6 584.65
        
    -determino quale ha più cifre dopo la virgola (e ottengo la differenza di precisione)
      *e con questo determino la posizione della virgola nel risultato
      
    
    -sostituisco nel numero meno preciso le E con 0 dalla prima che trovo alla "differenza di   precisione"
    
        025.6 584.65-> 02560EEE 58465EEE
    
    -cercare la prima E e ne segno la posizione (int EPOS->quindi il ciclo partirà da EPOS-1)
    -ciclo [da EPOS-1 a 0]
    {
        char riporto = '0';
        parto da EPOS-1 dei due array (e finisco a 0)
        ciclo[
            se riporto = '1':
                sommo riporto ad una delle cifre nella posizione dell'array
            
            sommo posizione attuale array1 e array2 tramite la funzione somma (pos1,pos2)
            applico la funzione rip_somma sulla stessa posizione 
            riporto = rip_somma
            ]
    }
    
    
    
    
        
        
}
